apply plugin: 'com.android.application'

def getVersionCode = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        workingDir '../'
        commandLine 'git', 'rev-list', '--count', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().toInteger()
}

def getVersionName = { ->
    return '1.0.' + getVersionCode()
}

def getCommitSha = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        workingDir '../'
        commandLine 'git', 'rev-list', '-n', '1', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().take(7)
}

android {
    compileSdk 33
    ndkVersion '25.1.8937393'

    defaultConfig {
        applicationId 'su.xash'
        applicationIdSuffix 'tf15client'
        versionName getVersionName()
        versionCode getVersionCode()
        minSdkVersion 21
        targetSdk 33

        buildConfigField "String", "COMMIT_SHA", "\"${getCommitSha()}\""

        externalNativeBuild {
            ndkBuild {
                arguments "V=1"
            }
        }
    }

    externalNativeBuild {
        cmake {
            version '3.22.1'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    externalNativeBuild {
        cmake {
            path file('../../CMakeLists.txt')
        }
    }

    lint {
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.activity:activity:1.6.1'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'androidx.fragment:fragment:1.5.5'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'com.android.volley:volley:1.2.1'
}

task makePak(type: Exec) {
    commandLine 'python', 'makepak.py', 'pak/', 'src/main/assets/extras.pak'
}

preBuild.dependsOn(makePak)